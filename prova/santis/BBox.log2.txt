Debug: BBApplication::BBApplication(int&, char**) 
Debug: void BBApplication::splash() 
Debug: void BBApplication::init() 
Debug: void BBApplication::systemTray() 
Debug: void BBApplication::changes(const QList<BBSvnStatus*>&) () 
Debug: static BBSettings* BBSettings::instance() 
Debug: BBSettings::BBSettings() 
Debug: bool BBSettings::isValid() const 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBStartup* BBStartup::instance() 
Debug: BBStartup::BBStartup() 
Debug: static BBSettings* BBSettings::instance() 
Debug: void BBStartup::reset() 
Debug: static BBSettings* BBSettings::instance() 
Debug: bool BBSettings::runOnStartup() const 
Debug: void BBStartup::removeStartup() 
Debug: BBObserver::BBObserver(QObject*) 
Debug: static BBSettings* BBSettings::instance() 
Debug: static bool BBObserver::checkObstructedFiles(bool*) 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/text-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/text-base" 
Debug: void BBObserver::directoryChanged() 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: BBActionManager::BBActionManager() 
Debug: void BBActionManager::actionCleanup() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionCleanup::BBActionCleanup(QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionCleanup(0x10285ed10) 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionLocalChanges() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionLocalChanges(0x10125bff0) 
Debug: virtual bool BBActionCleanup::compare(const BBAction*) 
Debug: BBFileSystemWatcher::BBFileSystemWatcher(QObject*) 
Warning: Object::connect: No such signal BBFileSystemWatcher::directoryChanged(QString) in ../src/bbobserver.cpp:82
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: void BBApplication::scheduleRemoteAction() 
Debug: void BBObserver::scheduleRemoteChanges() 
Debug: static BBSettings* BBSettings::instance() 
Debug: uint BBSettings::timerRemoteAction() const 
Debug: void BBApplication::scheduleRemoteAction() Next:  915  seconds. 
Debug: virtual void BBActionCleanup::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::cleanup() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: BBSvnManager::BBSvnManager() 
Debug: void BBSvnManager::createTmpConfig() 
Debug: void BBSvnManager::createTmpConfig() "/Users/paganotti/Library/Application Support/BBox.n3/BBox" 
Debug: void BBSvnManager::createTmpConfig() "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig" 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("cleanup", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012ace10) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012ace10) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionCleanup::onSvnDone(bool) true 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBActionCleanup::~BBActionCleanup() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x10287a9f0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x10287a9f0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) () 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionRemoteChanges() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionRemoteChanges::BBActionRemoteChanges(QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionRemoteChanges(0x10128f740) 
Debug: virtual void BBActionRemoteChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::localInfo() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("info", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x101271260) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x101271260) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionRemoteChanges::onLocalSvnDone(bool) 
Debug: BBSvnInfo* BBSvn::parseInfo() 
Debug: BBSvnInfo* BBSvn::parseInfo() "Path: /Users/paganotti/bbox
URL: http://gekoinformatica.net/svn/prova
Repository Root: http://gekoinformatica.net/svn/prova
Repository UUID: 3d5bbb8e-d319-4fe0-a533-d24a8f2b60f8
Revision: 6
Node Kind: directory
Schedule: normal
Last Changed Author: nicola.paganotti
Last Changed Rev: 6
Last Changed Date: 2011-11-03 20:17:04 +0100 (Thu, 03 Nov 2011)

" 
Debug: BBSvnInfo::BBSvnInfo(QObject*) 
Debug: void BBSvnInfo::setURL(const QString&) "http://gekoinformatica.net/svn/prova" 
Debug: void BBSvnInfo::setRevision(uint) 6 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::remoteInfo(const QString&) 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("info", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "http://gekoinformatica.net/svn/prova") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x10127b7d0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x10127b7d0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnInfo::~BBSvnInfo() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionRemoteChanges::onRemoteSvnDone(bool) 
Debug: BBSvnInfo* BBSvn::parseInfo() 
Debug: BBSvnInfo* BBSvn::parseInfo() "Path: prova
URL: http://gekoinformatica.net/svn/prova
Repository Root: http://gekoinformatica.net/svn/prova
Repository UUID: 3d5bbb8e-d319-4fe0-a533-d24a8f2b60f8
Revision: 6
Node Kind: directory
Last Changed Author: nicola.paganotti
Last Changed Rev: 6
Last Changed Date: 2011-11-03 20:17:04 +0100 (Thu, 03 Nov 2011)

" 
Debug: BBSvnInfo::BBSvnInfo(QObject*) 
Debug: void BBSvnInfo::setURL(const QString&) "http://gekoinformatica.net/svn/prova" 
Debug: void BBSvnInfo::setRevision(uint) 6 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnInfo::~BBSvnInfo() 
Debug: virtual BBActionRemoteChanges::~BBActionRemoteChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onSomethingChanged(const QString&) "/Users/paganotti/bbox" 0 
Debug: void BBObserver::onTimeout() 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionLocalChanges() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionLocalChanges(0x101268750) 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012710b0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012710b0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "?       /Users/paganotti/bbox/bigF2.bin
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) (BBSvnStatus(0x1012adee0) )  
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x1012adee0) )  
Debug: void BBApplication::changes(const QList<BBSvnStatus*>&) (BBSvnStatus(0x1012adee0) )  
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionScheduleCommit() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionScheduleCommit::BBActionScheduleCommit(QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionScheduleCommit(0x10284a1d0) 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: virtual void BBActionScheduleCommit::run() 
Debug: void BBApplication::commit() 
Debug: void BBApplication::blink(bool) true 
Debug: static BBSettings* BBSettings::instance() 
Debug: bool BBSettings::autoCommit() const 
Debug: BBSendReceive::BBSendReceive(QObject*) 
Debug: void BBSendReceive::start() 
Debug: void BBObserver::operationOnFileSystemRef() 0 
Debug: void BBSendReceive::checkCommitStatus() 0 
Debug: void BBSendReceive::onCommitTimeout() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012561e0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012561e0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBActionScheduleCommit::~BBActionScheduleCommit() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "?       /Users/paganotti/bbox/bigF2.bin
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) (BBSvnStatus(0x101269530) )  
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x101269530) )  
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionAdd::BBActionAdd(const QString&, QObject*) 
Debug: void BBActionLocalChanges::runActions(bool) true (BBActionAdd(0x1012ad3a0) )  
Debug: virtual void BBActionAdd::run() 
Debug: QStringList BBActionAdd::addDirectory(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: bool BBActionAdd::checkExtension(const QFileInfo&) 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionAdd::runAdd() Adding  "/Users/paganotti/bbox/bigF2.bin" 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::addFile(const QStringList&) ("/Users/paganotti/bbox/bigF2.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("add", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox/bigF2.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012695e0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012695e0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionAdd::onSvnDone(bool) true 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBSendReceive::onActionLocalChangesDone(bool) 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionCommit::BBActionCommit(bool, QObject*) 
Debug: virtual void BBActionCommit::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::commit() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: QString BBSvn::commitMessage() 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("commit", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "-m", "Update by BBox (user: paganotti, date: gio nov 3 20:20:06 2011)", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012561e0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012561e0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: virtual BBActionAdd::~BBActionAdd() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBApplication::onActivated(QSystemTrayIcon::ActivationReason) 3 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onSomethingChanged(const QString&) "/Users/paganotti/bbox" 1 
Debug: void BBApplication::onActivated(QSystemTrayIcon::ActivationReason) 3 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBApplication::onActivated(QSystemTrayIcon::ActivationReason) 3 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionCommit::onSvnDone(bool) true 
Debug: void BBApplication::changes(const QList<BBSvnStatus*>&) () 
Debug: static bool BBObserver::checkObstructedFiles(bool*) 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/text-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/text-base" 
Debug: void BBSendReceive::onActionCommitDone(bool) 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionUpdate::BBActionUpdate(bool, QObject*) 
Debug: virtual void BBActionUpdate::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::update() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("update", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "--accept", "postpone", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x101269570) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x101269570) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBActionCommit::~BBActionCommit() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionUpdate::onSvnDone(bool) true 
Debug: QList<BBSvnStatus*> BBSvn::parseUpdate() 
Debug: QList<BBSvnStatus*> BBSvn::parseUpdate() "At revision 7.
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 1 
Debug: void BBSvnStatus::setFile(const QString&) "vision 7." 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x1028693f0) )  
Debug: void BBSendReceive::onActionRevisionDone(bool) 
Debug: void BBSendReceive::onDone(bool) true 
Debug: void BBObserver::operationOnFileSystemUnref() 1 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: void BBObserver::onSomethingChanged(const QString&) "/Users/paganotti/bbox" 0 
Debug: void BBApplication::onSendReceiveDone(bool) 
Debug: void BBApplication::blink(bool) false 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBActionUpdate::~BBActionUpdate() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionLocalChanges() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionLocalChanges(0x10286cf20) 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x10287cf80) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x10287cf80) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "?       /Users/paganotti/bbox/bigF3.bin
?       /Users/paganotti/bbox/bigF4.bin
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) (BBSvnStatus(0x1012064a0) ,  BBSvnStatus(0x102882bf0) )  
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x1012064a0) ,  BBSvnStatus(0x102882bf0) )  
Debug: void BBApplication::changes(const QList<BBSvnStatus*>&) (BBSvnStatus(0x1012064a0) ,  BBSvnStatus(0x102882bf0) )  
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionScheduleCommit() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionScheduleCommit::BBActionScheduleCommit(QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionScheduleCommit(0x1012b7230) 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: virtual void BBActionScheduleCommit::run() 
Debug: void BBApplication::commit() 
Debug: void BBApplication::blink(bool) true 
Debug: static BBSettings* BBSettings::instance() 
Debug: bool BBSettings::autoCommit() const 
Debug: void BBSendReceive::start() 
Debug: void BBObserver::operationOnFileSystemRef() 0 
Debug: void BBSendReceive::checkCommitStatus() 0 
Debug: void BBSendReceive::onCommitTimeout() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x1012064a0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x1012064a0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBActionScheduleCommit::~BBActionScheduleCommit() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "?       /Users/paganotti/bbox/bigF3.bin
?       /Users/paganotti/bbox/bigF4.bin
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 6 
Debug: void BBSvnStatus::setFile(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) (BBSvnStatus(0x10127f770) ,  BBSvnStatus(0x1012792e0) )  
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x10127f770) ,  BBSvnStatus(0x1012792e0) )  
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionAdd::BBActionAdd(const QString&, QObject*) 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionAdd::BBActionAdd(const QString&, QObject*) 
Debug: void BBActionLocalChanges::runActions(bool) true (BBActionAdd(0x1012b2da0) ,  BBActionAdd(0x1012773d0) )  
Debug: virtual void BBActionAdd::run() 
Debug: QStringList BBActionAdd::addDirectory(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: bool BBActionAdd::checkExtension(const QFileInfo&) 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionAdd::runAdd() Adding  "/Users/paganotti/bbox/bigF3.bin" 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::addFile(const QStringList&) ("/Users/paganotti/bbox/bigF3.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("add", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox/bigF3.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x101287bc0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x101287bc0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionAdd::onSvnDone(bool) true 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionLocalChanges::runActions(bool) true (BBActionAdd(0x1012773d0) )  
Debug: virtual void BBActionAdd::run() 
Debug: QStringList BBActionAdd::addDirectory(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: bool BBActionAdd::checkExtension(const QFileInfo&) 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionAdd::runAdd() Adding  "/Users/paganotti/bbox/bigF4.bin" 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::addFile(const QStringList&) ("/Users/paganotti/bbox/bigF4.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("add", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox/bigF4.bin") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x10127ceb0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x10127ceb0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBActionAdd::~BBActionAdd() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionAdd::onSvnDone(bool) true 
Debug: void BBActionAdd::runAdd() 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBSendReceive::onActionLocalChangesDone(bool) 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionCommit::BBActionCommit(bool, QObject*) 
Debug: virtual void BBActionCommit::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::commit() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: QString BBSvn::commitMessage() 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("commit", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "-m", "Update by BBox (user: paganotti, date: gio nov 3 20:21:57 2011)", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x10127aa10) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x10127aa10) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: virtual BBActionAdd::~BBActionAdd() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionCommit::onSvnDone(bool) true 
Debug: void BBApplication::changes(const QList<BBSvnStatus*>&) () 
Debug: static bool BBObserver::checkObstructedFiles(bool*) 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/text-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/prop-base" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/props" 
Debug: static bool BBObserver::checkObstructedFiles(const QString&, bool*) "/Users/paganotti/bbox/.svn/tmp/text-base" 
Debug: void BBSendReceive::onActionCommitDone(bool) 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionUpdate::BBActionUpdate(bool, QObject*) 
Debug: virtual void BBActionUpdate::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::update() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("update", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "--accept", "postpone", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x101290630) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x101290630) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: virtual BBActionCommit::~BBActionCommit() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBSvn::onParentDestroyed() 
Debug: virtual BBSvn::~BBSvn() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionUpdate::onSvnDone(bool) true 
Debug: QList<BBSvnStatus*> BBSvn::parseUpdate() 
Debug: QList<BBSvnStatus*> BBSvn::parseUpdate() "At revision 8.
" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setStatus(BBSvnStatus::Status) 1 
Debug: void BBSvnStatus::setFile(const QString&) "vision 8." 
Debug: bool BBSvnStatus::isValid() 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: static void BBConflict::check(QList<BBSvnStatus*>) (BBSvnStatus(0x1012b8830) )  
Debug: void BBSendReceive::onActionRevisionDone(bool) 
Debug: void BBSendReceive::onDone(bool) true 
Debug: void BBObserver::operationOnFileSystemUnref() 1 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: void BBObserver::onSomethingChanged(const QString&) "/Users/paganotti/bbox" 0 
Debug: void BBApplication::onSendReceiveDone(bool) 
Debug: void BBApplication::blink(bool) false 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBActionUpdate::~BBActionUpdate() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF2.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF3.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/bigF4.bin" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Blueprint Cheatsheet v1.0.html" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Learning_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Oreilly_Programming_Python_4th_Edition.pdf" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/paginazione.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/pdf.png" 
Debug: void BBObserver::addDirectory(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: void BBFileSystemWatcher::addPath(const QString&) "/Users/paganotti/bbox/Schermata 2011-10-06 a 11.35.14.png" 
Debug: static BBActionManager* BBActionManager::instance() 
Debug: void BBActionManager::actionLocalChanges() 
Debug: BBAction::BBAction(QObject*) 
Debug: BBActionLocalChanges::BBActionLocalChanges(bool, QObject*) 
Debug: void BBActionManager::addAction(BBAction*) BBActionLocalChanges(0x10286cf20) 
Debug: virtual void BBActionLocalChanges::run() 
Debug: BBSvn::BBSvn(QObject*) 
Debug: void BBSvn::status() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::directory() const 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: const QStringList BBSvnManager::svnConfigParams() 
Debug: void BBSvn::start(const QStringList&) ("status", "--config-dir", "/Users/paganotti/Library/Application Support/BBox.n3/BBox/bboxSvnConfig", "--non-interactive", "--trust-server-cert", "/Users/paganotti/bbox") 
Debug: static BBSvnManager* BBSvnManager::instance() 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) BBSvn(0x102872ff0) 
Debug: void BBSvnManager::registerForSchedule(BBSvn*) m_svn_Scheduled.isNull && msvnList.isEmpty 
Debug: void BBSvnManager::schedule(BBSvn*) BBSvn(0x102872ff0) 
Debug: void BBSvn::schedule() 
Debug: static BBSettings* BBSettings::instance() 
Debug: QString BBSettings::svn() const 
Debug: void BBSvn::onFinished(int, QProcess::ExitStatus) 0 0 "" 
Debug: void BBSvnManager::onSvnDone() 
Debug: void BBActionLocalChanges::onSvnDone(bool) 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() 
Debug: QList<BBSvnStatus*> BBSvn::parseStatus() "" 
Debug: BBSvnStatus::BBSvnStatus(QObject*) 
Debug: void BBSvnStatus::setFile(const QString&) "" 
Debug: bool BBSvnStatus::isValid() 
Debug: void BBActionLocalChanges::checkStatus(const QList<BBSvnStatus*>&) () 
Debug: void BBActionLocalChanges::runActions(bool) true () 
Debug: void BBActionManager::onActionDone(bool) 
Debug: virtual BBSvnStatus::~BBSvnStatus() 
Debug: virtual BBSvn::~BBSvn() 
Debug: virtual BBActionLocalChanges::~BBActionLocalChanges() 
Debug: virtual BBAction::~BBAction() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBObserver::onTimeout() 
Debug: void BBFileSystemWatcher::onTimeout() 
Debug: void BBApplication::onActivated(QSystemTrayIcon::ActivationReason) 3 
Debug: void BBObserver::onTimeout() 
Debug: void BBObserver::onAboutToQuit() 
Debug: virtual BBFileSystemWatcher::~BBFileSystemWatcher() 
Debug: virtual BBApplication::~BBApplication() 
Debug: virtual BBSettings::~BBSettings() 
Debug: virtual BBStartup::~BBStartup() 
Debug: virtual BBObserver::~BBObserver() 
Debug: virtual BBActionManager::~BBActionManager() 
Debug: virtual BBSvnManager::~BBSvnManager() 
Debug: virtual BBSendReceive::~BBSendReceive() 
